

I had initially intended to design a BlackJack API, but after I set up the initial game logic, I realized that it was
really just a Guess a Number game that tested whether or not the player guessed 21 :P
It turns out that the BlackJack logic was much more complex than I had originally thought, so I decided to go with a 
Hangman model. This worked out well because the concept was much the same as the original Guess A Number game logic, but was 
a great way to learn how to build off this logic. 

Setting up the initial logic was fairly straight forward, but it took my some time to figure out how to display the word
being guessed in the correct order. Once a user guessed a word, the word would only be display in the order guessed, so 
even if the user guessed the word "dinosaur" correctly, if they guessed it in the order "suadnior", that is hw it would
display. In order to solve this problem, I did some research and found the following page: https://inventwithpython.com/chapter9.html

This helped me figure out how to properly create an empty string of blanks within my game logic so that if the target
word was "dinosaur" and the user were to guess the letters "sird", the word would display to them as "di__s__r".

Apart from this, I added a cancel game endpoint, which allows the user to cancel a game if they decid it is way to 
complicated (All those three letter words are quite complex), a user history form, which will display the guess history 
of a given user, and a user rankings form which displays the usr rankings based upon wins and win percentages.
